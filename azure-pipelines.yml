# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DownloadSecureFile@1
  displayName: 'Download SSH Public Key'
  inputs:
    secureFile: 'f98bb1f9-7e4c-41f8-8714-a20e2af9f62f'

- pwsh: |
   foreach ($file in $(Get-ChildItem Env:*SECUREFILEPATH))
   {
       Copy-Item $file.Value terraform
   }
  displayName: 'Copy Secure Files'

- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
  displayName: 'terraform init'
  inputs:
    command: 'init'
    workingDirectory: 'terraform'
    backendType: 'azurerm'
    backendServiceArm: '$(subscriptionConnection)'
    backendAzureRmResourceGroupName: 'Automation'
    backendAzureRmStorageAccountName: 'ewterraformstate'
    backendAzureRmContainerName: 'pipelineagents'
    backendAzureRmKey: '$(ARM_ACCESS_KEY)'

# - task: AzureCLI@2
#   displayName: 'terraform apply'
#   inputs:
#     azureSubscription: '$(subscriptionConnection)'
#     scriptType: pscore
#     scriptLocation: inlineScript
#     inlineScript: |
#      # Fix case of environment variables mangkled by Azure Pipeline Agent
#      foreach ($tfvar in $(Get-ChildItem Env:TF_VAR_*)) {
#          $properCaseName = $tfvar.Name.Substring(0,7) + $tfvar.Name.Substring(7).ToLowerInvariant()
#          Invoke-Expression "`$env:$properCaseName = `$env:$($tfvar.Name)"  
#      }
#      # List environment variables
#      Get-ChildItem -Path Env: -Recurse -Include ARM_*,TF_VAR_* | Sort-Object -Property Name
#      terraform apply -auto-approve -var="devops_pat=$(TF_VAR_devops_pat)"
#     addSpnToEnvironment: true
#     useGlobalConfig: true
#     workingDirectory: terraform
#     failOnStandardError: true
#   env:
#     # Use Pipeline tokens to access Azure & Azure DevOps
#     ARM_CLIENT_ID: $(servicePrincipalId)
#     ARM_CLIENT_SECRET: $(servicePrincipalKey)
#     ARM_TENANT_ID: $(tenantId)
#     AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
