# This pipeline is for CI/CD
name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-$(SourceBranchName)-$(Build.BuildId)

resources:
  repositories:
  - repository: virtual-environments
    type: github
    endpoint: github.com # Service Connection
    name: actions/virtual-environments

trigger: none

pr:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - '.devcontainer/**'  
    - 'visuals/**'  
    - '*.md'  

# schedules:
# - cron: '0 0 * * Mon,Wed,Fri'
#   displayName: 'Bi-Nightly build (UTC)'
#   # Run if there are no changes
#   always: 'true'
#   branches:
#     include:
#     - master

variables:
- group: 'pipeline-agents-ci'
- name: 'agentRepository'
  value: '$(Build.SourcesDirectory)/azure-pipeline-agents'
- name: 'agentScriptDirectory'
  value: '$(Build.SourcesDirectory)/azure-pipeline-agents/scripts'
- name: AZURE_CORE_ONLY_SHOW_ERRORS
  value: 'true'
- name: AZURE_EXTENSION_USE_DYNAMIC_INSTALL
  value: 'yes_without_prompt'
- name: 'imageName'
  value: 'Ubuntu1804'
- name: 'imageRepository'
  value: '$(Build.SourcesDirectory)/virtual-environments'
- name: 'imageResourceGroup' 
  value: 'azure-pipelines-images-$(Build.BuildId)'
- name: 'imageScriptDirectory'
  value: '$(Build.SourcesDirectory)/virtual-environments/helpers'

jobs:
- job: 'Build'

  pool:
    name: 'Azure Pipelines'
    vmImage: windows-latest

  steps:
  - checkout: self
  - checkout: virtual-environments

  - pwsh: |
      dir
    displayName: 'Agent directory'
    workingDirectory: '$(agentScriptDirectory)'
  - pwsh: |
      dir
    displayName: 'Image directory'
    workingDirectory: '$(imageScriptDirectory)'

  - task: AzurePowerShell@5
    name: build
    displayName: 'Build image'
    inputs:
      azureSubscription: '$(subscriptionConnection)'
      scriptType: inlineScript
      inline: |
        dir
        Import-Module ./GenerateResourcesAndImage.ps1
        Get-AzContext | Select-Object -ExpandProperty Subscription | Select-Object -ExpandProperty Id | Set-Variable subscriptionId
        echo GenerateResourcesAndImage -SubscriptionId $subscriptionId `
                                  -ResourceGroupName $(imageResourceGroup) `
                                  -ImageGenerationRepositoryRoot "$(imageRepository)" `
                                  -ImageType $(imageName) `
                                  -AzureLocation $(TF_VAR_location)
      azurePowerShellVersion: 'latestVersion'
      pwsh: true
      failOnStandardError: true
      workingDirectory: '$(imageScriptDirectory)'

