# This pipeline is for CI/CD
name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-$(SourceBranchName)-$(Build.BuildId)

resources:
  repositories:
  - repository: virtual-environments
    type: github
    endpoint: github.com # Service Connection
    name: actions/virtual-environments

trigger: none

pr:
  branches:
    include:
    - '*'
  paths:
    exclude:
    - '.devcontainer/**'  
    - 'visuals/**'  
    - '*.md'  

# schedules:
# - cron: '0 0 * * Mon,Wed,Fri'
#   displayName: 'Bi-Nightly build (UTC)'
#   # Run if there are no changes
#   always: 'true'
#   branches:
#     include:
#     - master

variables:
- group: 'pipeline-agents-ci'
- name: 'agentRepository'
  value: '$(Build.SourcesDirectory)/azure-pipeline-agents'
- name: 'agentScriptDirectory'
  value: '$(Build.SourcesDirectory)/azure-pipeline-agents/scripts'
- name: AZURE_CORE_ONLY_SHOW_ERRORS
  value: 'true'
- name: AZURE_EXTENSION_USE_DYNAMIC_INSTALL
  value: 'yes_without_prompt'
- name: 'imageName'
  value: 'Ubuntu1804'
- name: 'imageRepository'
  value: '$(Build.SourcesDirectory)/virtual-environments'
- name: 'imageResourceGroup' 
  # value: 'azure-pipelines-images-$(Build.BuildId)'
  value: 'packer-$(Build.BuildId)'
- name: 'imageScriptDirectory'
  value: '$(Build.SourcesDirectory)/virtual-environments/helpers'

jobs:
- job: 'Build'
  pool:
    name: 'Azure Pipelines'
    vmImage: windows-latest
  timeoutInMinutes: 300

  steps:
  - checkout: self
  - checkout: virtual-environments

  - task: AzureCLI@2
    name: servicePrincipal
    displayName: 'Fetch credentials'
    inputs:
      azureSubscription: '$(subscriptionConnection)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "##vso[task.setvariable variable=clientId;isoutput=true]${env:servicePrincipalId}"
        Write-Host "##vso[task.setvariable variable=clientSecret;isoutput=true;issecret=true]${env:servicePrincipalKey}"
        Write-Host "##vso[task.setvariable variable=tenantId;isoutput=true]${env:tenantId}"

        az ad sp show --id $env:servicePrincipalId
      addSpnToEnvironment: true
      useGlobalConfig: true
      failOnStandardError: true

  - task: AzurePowerShell@5
    name: build
    displayName: 'Build image'
    inputs:
      azureSubscription: '$(subscriptionConnection)'
      scriptType: inlineScript
      inline: |
        if ((${env:system.debug} -eq "true") -or ($env:system_debug -eq "true") -or ($env:SYSTEM_DEBUG -eq "true")) {
          $DebugPreference       = "Continue"
          $InformationPreference = "Continue"
          $VerbosePreference     = "Continue"
          Set-PSDebug -Trace 2
        }
        Import-Module $(imageScriptDirectory)/GenerateResourcesAndImage.ps1
        Get-AzContext | Select-Object -ExpandProperty Subscription | Select-Object -ExpandProperty Id | Set-Variable subscriptionId
        GenerateResourcesAndImage -SubscriptionId $subscriptionId `
                                  -ResourceGroupName $(imageResourceGroup) `
                                  -ImageGenerationRepositoryRoot "$(imageRepository)" `
                                  -ImageType $(imageName) `
                                  -AzureLocation $(TF_VAR_location) `
                                  -AzureClientId $(servicePrincipal.clientId) `
                                  -AzureClientSecret "$(servicePrincipal.clientSecret)" `
                                  -AzureTenantId $(servicePrincipal.tenantId) 
      azurePowerShellVersion: 'latestVersion'
      pwsh: true
      failOnStandardError: true
