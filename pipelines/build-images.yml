# The Service Connection (Principal) for this pipeline requires Storage Data (Reader) access to the subscription
# This pipeline will create a storage account to temporarily store a VHD

parameters:
- name: imageRepoRef
  displayName: Image ref
  type: string
  default: 'refs/heads/main'
- name: image
  displayName: Image
  type: string
  default: Latest
  values:
  - All
  - Latest
  - Stable
  - Ubuntu
  - Ubuntu2204
  - Ubuntu2404
  - Windows
  - Windows2019
  - Windows2022
  - Windows2025
- name: destroy
  displayName: Destroy Infrastructure
  type: boolean
  default: true
- name: excludeFromLatest
  displayName: Exclude from latest
  type: boolean
  default: true
- name: numberOfVersionsToKeep
  displayName: Number of image versions to keep
  type: number
  default: 10
- name: addMinorImageVersion
  displayName: Create minor version if major version exists
  type: boolean
  default: false

name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-$(SourceBranchName)-${{ lower(parameters.image) }}-$(Build.BuildId)

resources:
  repositories:
  - repository: runner-images
    type: github
    endpoint: github.com # Service Connection name
    name: actions/runner-images
    ref: ${{ parameters.imageRepoRef }}

trigger: none

pr:
  autoCancel: false
  branches:
    include:
    - '*'
  paths:
    exclude:
    - '.devcontainer/**'  
    - 'visuals/**'  
    - '*.md'  

schedules:
- cron: '0 12 * * *'
  displayName: 'Weekly build (UTC)'
  always: 'true' # Run if there are no changes
  branches:
    include:
    - master

variables:
  - group: 'build-images-isolated'
  # - group: 'build-images'
  # Variable group should set these variables:
  # PIPELINE_DEMO_PACKER_LOCATION
  # PIPELINE_DEMO_COMPUTE_GALLERY_NAME
  # PIPELINE_DEMO_COMPUTE_GALLERY_RESOURCE_GROUP_NAME
  - name: imageRepoRef
    value: ${{ parameters.imageRepoRef }}

jobs:
- ${{ if in(parameters.image,'All','Latest','Ubuntu','Ubuntu2204') }}:
  - template: build-image-template.yml
    parameters:
      addMinorImageVersion: ${{ parameters.addMinorImageVersion }}
      destroy: ${{ parameters.destroy }}
      excludeFromLatest: ${{ parameters.excludeFromLatest }}
      image: Ubuntu2204
      imageReleaseName: ubuntu22
      imageResourceGroup: 'pipeline-image-$(Build.BuildId)-u22'
      numberOfVersionsToKeep: ${{ parameters.numberOfVersionsToKeep }}

- ${{ if in(parameters.image,'All','Latest','Ubuntu','Ubuntu2404') }}:
  - template: build-image-template.yml
    parameters:
      addMinorImageVersion: ${{ parameters.addMinorImageVersion }}
      destroy: ${{ parameters.destroy }}
      excludeFromLatest: ${{ parameters.excludeFromLatest }}
      image: Ubuntu2404
      imageReleaseName: ubuntu24
      imageResourceGroup: 'pipeline-image-$(Build.BuildId)-u24'
      numberOfVersionsToKeep: ${{ parameters.numberOfVersionsToKeep }}

- ${{ if in(parameters.image,'All','Stable','Windows','Windows2019') }}:
  - template: build-image-template.yml
    parameters:
      addMinorImageVersion: ${{ parameters.addMinorImageVersion }}
      destroy: ${{ parameters.destroy }}
      excludeFromLatest: ${{ parameters.excludeFromLatest }}
      image: Windows2019
      imageReleaseName: win19
      imageResourceGroup: 'pipeline-image-$(Build.BuildId)-w19'
      numberOfVersionsToKeep: ${{ parameters.numberOfVersionsToKeep }}

- ${{ if in(parameters.image,'All','Windows','Windows2022') }}:
  - template: build-image-template.yml
    parameters:
      addMinorImageVersion: ${{ parameters.addMinorImageVersion }}
      destroy: ${{ parameters.destroy }}
      excludeFromLatest: ${{ parameters.excludeFromLatest }}
      image: Windows2022
      imageReleaseName: win22
      imageResourceGroup: 'pipeline-image-$(Build.BuildId)-w22'
      numberOfVersionsToKeep: ${{ parameters.numberOfVersionsToKeep }}

- ${{ if in(parameters.image,'All','Latest','Windows','Windows2025') }}:
  - template: build-image-template.yml
    parameters:
      addMinorImageVersion: ${{ parameters.addMinorImageVersion }}
      destroy: ${{ parameters.destroy }}
      excludeFromLatest: ${{ parameters.excludeFromLatest }}
      image: Windows2025
      imageReleaseName: win25
      imageResourceGroup: 'pipeline-image-$(Build.BuildId)-w25'
      numberOfVersionsToKeep: ${{ parameters.numberOfVersionsToKeep }}